{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","selector","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","ThemeProvider","className","Container","maxWidth","Grid","container","justify","item","List","component","ListItem","button","this","Fab","color","aria-label","onClick","setState","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45d18cef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Fab from'@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport AccountBalanceOutlinedIcon from '@material-ui/icons/AccountBalanceOutlined';\nimport VoicemailOutlinedIcon from '@material-ui/icons/VoicemailOutlined';\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport LocalAtmOutlinedIcon from '@material-ui/icons/LocalAtmOutlined';\nimport BathtubOutlinedIcon from '@material-ui/icons/BathtubOutlined';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport './css/App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selector: \"one\",\n    };\n  }\n\n  render() {\n\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#ffffff',\n        },\n        secondary: {\n          light: '#0066ff',\n          main: '#ffffff',\n          contrastText: '#3f4a75',\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n      },\n    });\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App bg\">\n          <Container maxWidth=\"m\">\n            <Grid \n              container\n              justify=\"center\"\n              className=\"bg main_wrapper\"\n            >\n              <Grid \n                item\n                className=\"txt_1\"\n              >\n                  Are you making the most of your<br/>money <span className=\"txt_2\">whatever<br/>your life stage ?</span>\n                  <List \n                    component=\"nav\"\n                    className=\"list\"\n                  >\n                    <ListItem\n                      button\n                      className={ this.state.selector === \"one\"? \"listItem list_selected\": \"listItem\" }\n                    >\n                        <ChevronRightIcon />\n                        Getting Started\n                    </ListItem>\n                    <ListItem\n                      className={ this.state.selector === \"two\"? \"listItem list_selected\": \"listItem\" }\n                    >\n                        <ChevronRightIcon />\n                        Focusing on the future\n                    </ListItem>\n                    <ListItem\n                      className={ this.state.selector === \"three\"? \"listItem list_selected\": \"listItem\" }\n                    >\n                        <ChevronRightIcon />\n                        Thinking about your retirement\n                    </ListItem>\n                    <ListItem\n                      className={ this.state.selector === \"four\"? \"listItem list_selected\": \"listItem\" }\n                    >\n                        <ChevronRightIcon />\n                        Enjoying your retirement\n                    </ListItem>\n                    <ListItem\n                      className={ this.state.selector === \"five\"? \"listItem list_selected\": \"listItem\" }\n                    >\n                        <ChevronRightIcon />\n                        Creating a legacy\n                    </ListItem>\n                  </List>\n              </Grid>\n              <Grid \n                item\n                className=\"pic_1_1\"\n              >\n                <div \n                  className={ \"pic_\"+this.state.selector }>\n                <div className=\"inner_row row_1\">\n                    <div className=\"btn btn_top\">\n                      <Fab\n                        color=\"primary\" \n                        aria-label=\"getting started\"\n                        className={ this.state.selector === \"one\"? \"selected\": \"fab\" }\n                        onClick={() => this.setState({ selector: \"one\" })}\n                      >\n                        <AccountBalanceOutlinedIcon />\n                      </Fab>\n                    </div>\n                </div>\n                <div className=\"inner_row row_2\">\n                    <div className=\"btn btn_lh\">\n                      <Fab \n                        color=\"primary\" \n                        aria-label=\"focusing on the future\"\n                        className={ this.state.selector === \"five\"? \"selected\": \"fab\" }\n                        onClick={() => this.setState({ selector: \"five\" })}\n                      >\n                        <VoicemailOutlinedIcon />\n                      </Fab>\n                    </div>\n                    <div className=\"btn btn_rh\">\n                      <Fab \n                        color=\"primary\" \n                        aria-label=\"thinking about retirement\"\n                        // className=\"fab\"\n                        className={ this.state.selector === \"two\"? \"selected\": \"fab\" }\n                        onClick={() => this.setState({ selector: \"two\" })}\n                      >\n                        <VpnKeyOutlinedIcon />\n                      </Fab>\n                    </div>\n                </div>\n                <div className=\"inner_row row_3\">\n                    <div className=\"btn btn_btm_lh\">\n                      <Fab \n                        color=\"primary\" \n                        aria-label=\"enjoying your retirement\"\n                        className=\"fab\"\n                        className={ this.state.selector === \"four\"? \"selected\": \"fab\" }\n                        onClick={() => this.setState({ selector: \"four\" })}\n                      >\n                        <LocalAtmOutlinedIcon />\n                      </Fab>\n                    </div>\n                    <div className=\"btn btn_btm_rh\">\n                      <Fab \n                        color=\"primary\" \n                        aria-label=\"add\"\n                        className=\"fab\"\n                        className={ this.state.selector === \"three\"? \"selected\": \"fab\" }\n                        onClick={() => this.setState({ selector: \"three\" })}\n                      >\n                        <BathtubOutlinedIcon />\n                      </Fab>\n                    </div>\n                </div>\n                </div>\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n\n// function App() {\n\n//   let state ={ selector: \"one\" }\n\n//   function changeMenu(_s){\n//     state.selector = _s;\n//     console.log(\"Change\", state.selector);\n//   }\n//   // better as abstract\n//   const theme = createMuiTheme({\n//     palette: {\n//       primary: {\n//         main: '#ffffff',\n//       },\n//       secondary: {\n//         light: '#0066ff',\n//         main: '#ffffff',\n//         contrastText: '#3f4a75',\n//       },\n//       contrastThreshold: 3,\n//       tonalOffset: 0.2,\n//     },\n//   });\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <div className=\"App bg\">\n//         <Container maxWidth=\"m\">\n//           <Grid \n//             container\n//             justify=\"center\"\n//             className=\"bg main_wrapper\"\n//           >\n//             <Grid \n//               item\n//               className=\"txt_1\"\n//             >\n//                 Are you making the most of your money <span className=\"txt_2\">whatever your life stage</span>\n//                 <List \n//                   component=\"nav\"\n//                   className=\"list\"\n//                 >\n//                   <ListItem\n//                     button\n//                     className=\"listItem\"\n//                   >\n//                       <ChevronRightIcon />\n//                       Getting Started\n//                   </ListItem>\n//                   <ListItem\n//                     className=\"listItem\"\n//                   >\n//                       <ChevronRightIcon />\n//                       Focusing on the future\n//                   </ListItem>\n//                   <ListItem\n//                     className=\"listItem\"\n//                   >\n//                       <ChevronRightIcon />\n//                       Thinking about your retirement\n//                   </ListItem>\n//                   <ListItem\n//                     className=\"listItem\"\n//                   >\n//                       <ChevronRightIcon />\n//                       Enjoying your retirement\n//                   </ListItem>\n//                   <ListItem\n//                     className=\"listItem\"\n//                   >\n//                       <ChevronRightIcon />\n//                       Creating a legacy\n//                   </ListItem>\n//                 </List>\n//             </Grid>\n//             <Grid \n//               item\n//               className=\"pic_1_1\"\n//             >\n//               <div className=\"pic_1\">\n//               {this.state.selector}\n//               <div className=\"inner_row row_1\">\n//                   <div className=\"btn\">\n//                     <Fab\n//                       color=\"primary\" \n//                       aria-label=\"getting started\"\n//                       className={ state.selector === \"one\"? \"selected\": null }\n//                       size=\"large\"\n//                       onClick={() => { changeMenu('one') }}\n//                     >\n//                       <AccountBalanceOutlinedIcon />\n//                     </Fab>\n//                   </div>\n//               </div>\n//               <div className=\"inner_row row_2\">\n//                   <div className=\"btn btn_lh\">\n//                     <Fab \n//                       color=\"primary\" \n//                       aria-label=\"focusing on the future\"\n//                       className=\"fab\"\n//                       onClick={() => { changeMenu('two') }}\n//                     >\n//                       <VoicemailOutlinedIcon />\n//                     </Fab>\n//                   </div>\n//                   <div className=\"btn btn_rh\">\n//                     <Fab \n//                       color=\"primary\" \n//                       aria-label=\"thinking about retirement\"\n//                       className=\"fab\"\n//                     >\n//                       <VpnKeyOutlinedIcon />\n//                     </Fab>\n//                   </div>\n//               </div>\n//               <div className=\"inner_row row_3\">\n//                   <div className=\"btn btn_btm_lh\">\n//                     <Fab \n//                       color=\"primary\" \n//                       aria-label=\"enjoying your retirement\"\n//                       className=\"fab\"\n//                     >\n//                       <LocalAtmOutlinedIcon />\n//                     </Fab>\n//                   </div>\n//                   <div className=\"btn btn_btm_rh\">\n//                     <Fab \n//                       color=\"primary\" \n//                       aria-label=\"add\"\n//                       className=\"fab\"\n//                     >\n//                       <BathtubOutlinedIcon />\n//                     </Fab>\n//                   </div>\n//               </div>\n//               </div>\n//             </Grid>\n//           </Grid>\n//         </Container>\n//       </div>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}